(function($) {

/**
 * A manager for delayed YouTube video loaders that initializes a loader for
 * each properly formatted YouTube video found on a page.
 *
 * @constructor
 */
var DelayedYouTubeLoaderManager = function() {};

/**
 * CSS selectors used for managing loaders.
 *
 * @type {object}
 * @private
 */
DelayedYouTubeLoaderManager.prototype._CSS = {

	// The thumbnail image of a video
	'thumbnails': ".cb-youtube-local-playlist-page-video-thumbnail"
};

/**
 * Initialize loaders for every thumbnail on the page.
 *
 * @return {array} a list of all initialized DelayedYouTubeLoader instances
 */
DelayedYouTubeLoaderManager.prototype.initializeLoaders = function() {

	// Initialize a loader for every thumbnail that has not yet been bound to one
	var loaders = [];
	$(this._CSS.thumbnails).each(function(i, thumbnail) {
		loaders.push(new DelayedYouTubeLoader(thumbnail));
	});

	// Give the user the list of initialized loaders
	return loaders;
};

/**
 * A delayed YouTube video loader that is associated with a thumbnail image of
 * a video.  When the thumbnail is clicked on, it is transformed into a playable
 * embedded YouTube video.
 *
 * @param thumbnail {object} a reference to a video thumbnail DOM element
 * @constructor
 */
var DelayedYouTubeLoader = function(thumbnail) {

	this._$thumbnail = $(thumbnail);
	this._$container = this._$thumbnail.parents(this._CSS.containers);
	this._youtube_id = this._$thumbnail.attr('data-youtube-id');

	// Cause clicking on the thumbnail to turn it into a playable video
	this._$thumbnail.bind('click.playlist', $.proxy(this._enableOnClick, this));
};

/**
 * CSS identifiers used with a single delayed loader.
 *
 * @type {object}
 * @private
 */
DelayedYouTubeLoader.prototype._CSS = {

	// The wrapper for a YouTube thumbnail / video
	'containers': ".cb-youtube-local-playlist-page-video-thumbnail-container",
};

/**
 * The base URL for the embed iframe's source URL.
 *
 * @type {string}
 * @private
 */
DelayedYouTubeLoader.prototype._EMBED_URL_BASE = "http://www.youtube.com/embed/";

/**
 * The default height of an embedded iframe.
 *
 * @type {number}
 * @private
 */
DelayedYouTubeLoader.prototype._IFRAME_HEIGHT = 349;

/**
 * The default width of an embedded iframe.
 *
 * @type {number}
 * @private
 */
DelayedYouTubeLoader.prototype._IFRAME_WIDTH = 560;

/**
 * Transform the thumbnail into an iframe when clicked on.
 *
 * @param e {object} the event generated by a user clicking on a video thumbnail
 * @private
 */
DelayedYouTubeLoader.prototype._enableOnClick = function(e) {

	// Disable any further click listening on the thumbnail
	e.preventDefault();
	this._$thumbnail.unbind('click.playlist');

	// Inject the iframe with the actual YouTube video
	iframe = '<iframe width="' + this._IFRAME_WIDTH + '" height="';
	iframe += this._IFRAME_HEIGHT + '" src="';
	iframe += this._EMBED_URL_BASE + this._youtube_id + '"';
	iframe += ' frameborder="0" allowfullscreen></iframe>';
	this._$container.html(iframe);
};

/** Initialize the delayed loaders when the page is ready. */
$(document).ready(function() {
	var loaderManager = new DelayedYouTubeLoaderManager();
	loaderManager.initializeLoaders();
});

})(jQuery);
